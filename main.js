(()=>{"use strict";const t=class{constructor(t=10){this.size=t}shipCoordinates=[];recordAttack=[];sunkShips=[];receiveAttack(t){this.recordAttack.push(t);for(let e=0;e<this.shipCoordinates.length;e++)for(let s=0;s<this.shipCoordinates[e].location.length;s++)if(t[0]===this.shipCoordinates[e].location[s][0]&&t[1]===this.shipCoordinates[e].location[s][1])return this.shipCoordinates[e].object.hit(t),i.wasHit=!0,void(this.shipCoordinates[e].object.isSunk()&&this.sunkShips.push(this.shipCoordinates[e].object))}addShip(t,e){this.shipCoordinates.push({object:t,location:e})}getSunkShips(){return this.sunkShips}allShipsSunk(){return 5===this.sunkShips.length}},e=class{constructor(t="Computer"){this.name=t}attack(t,e){let s=[parseInt(t[0]),parseInt(t[1])];if(console.log(s),0===e.recordAttack.length)return e.receiveAttack(s),!0;for(let t=0;t<e.recordAttack.length;t++)return(s[0]!==e.recordAttack[t][0]||s[1]!==e.recordAttack[t][1])&&(e.receiveAttack(s),!0)}cpuAttack(t){let e=Math.floor(Math.random())*t.size,s=Math.floor(Math.random())*t.size;return this.attack([e,s],t)}},s=class{constructor(t,e=null){this.name=e,this.length=t,this.hitCoordinates=[]}getHitCoordinates(){return this.hitCoordinates}hit(t){this.hitCoordinates.push(t)}isSunk(){return this.length===this.hitCoordinates.length}};class i{static turn="player";static players=[];static boards=[];static mode="PvP";static wasHit=!1}function*n(t){let e=[0,0];for(;e[0]<=t-1&&e[1]<=t-1;)0===e[0]&&0===e[1]&&(yield e),e[1]++,e[1]===t&&(e[0]++,e[1]=0),yield e}function a(t){t.addEventListener("click",(()=>{if("opponent"===i.turn)return void a(t);const e=i.players[0],s=i.boards[1],n=t.id.slice(1).split(",");e.attack(n,s),!0===i.wasHit?(t.classList.add("hit"),i.wasHit=!1):t.classList.add("miss"),i.turn="opponent"}),{once:!0})}function r(t){t.addEventListener("click",(()=>{if("player"===i.turn)return void r(t);const e=i.players[1],s=i.boards[0],n=t.id.slice(1).split(",");"PvP"===i.mode&&(e.attack(n,s),!0===i.wasHit?(t.classList.add("hit"),i.wasHit=!1):t.classList.add("miss")),i.turn="player"}),{once:!0})}(function(){const n=new t,a=new t;i.boards.push(n),i.boards.push(a);const r=new e("Jae"),o=new e;i.players.push(r),i.players.push(o);let d=new s(4,"Battleship"),c=new s(2,"Destroyer"),h=new s(3,"Cruiser"),l=new s(3,"Submarine"),p=new s(5,"Carrier");n.addShip(p,[[3,0],[3,1],[3,2],[3,3],[3,4]]),n.addShip(l,[[2,0],[2,1],[2,2]]),n.addShip(h,[[1,0],[1,1],[1,2]]),n.addShip(d,[[5,0],[5,1],[5,2],[5,3]]),n.addShip(c,[[4,0],[4,1]]),a.addShip(p,[[3,0],[3,1],[3,2],[3,3],[3,4]]),a.addShip(l,[[2,0],[2,1],[2,2]]),a.addShip(h,[[1,0],[1,1],[1,2]]),a.addShip(d,[[5,0],[5,1],[5,2],[5,3]]),a.addShip(c,[[4,0],[4,1]])})(),function(t=10){const e=n(t),s=n(t),i=document.getElementById("current-player-board"),o=document.getElementById("current-opponent-board");for(let s=0;s<t*t;s++){const t=document.createElement("div");t.className="player-grid-elements",t.id=`a${e.next().value}`,a(t),i.appendChild(t)}for(let e=0;e<t*t;e++){const t=document.createElement("div");t.className="opponent-grid-elements",t.id=`b${s.next().value}`,r(t),o.appendChild(t)}}()})();